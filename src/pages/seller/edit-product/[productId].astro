---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { adminAuth, adminFirestore } from '../../../firebase/server';

const { productId } = Astro.params;

const sessionCookie = Astro.cookies.get('session')?.value;

if (!sessionCookie) {
  return Astro.redirect('/login');
}

let user = null;
let product = null;

try {
  const decodedClaims = await adminAuth.verifySessionCookie(sessionCookie, true);

  if (decodedClaims.seller) {
    user = decodedClaims;
    const sellerId = user.uid;

    // Obtener el producto del vendedor
    const productDoc = await adminFirestore
      .collection('sellers')
      .doc(sellerId)
      .collection('products')
      .doc(productId)
      .get();

    if (productDoc.exists) {
      product = { id: productDoc.id, ...productDoc.data() };

      // Obtener detalles adicionales del producto desde la colección 'products' si es necesario
      const mainProductDoc = await adminFirestore.collection('products').doc(productId).get();
      if (mainProductDoc.exists) {
        const mainProductData = mainProductDoc.data();
        // Combinar los datos del producto principal con los datos del vendedor
        product = { ...mainProductData, ...product };
      }
    } else {
      return Astro.redirect('/seller/dashboard');
    }
  } else {
    return Astro.redirect('/no-autorizado');
  }
} catch (error) {
  console.error('Error al verificar la sesión:', error);
  return Astro.redirect('/login');
}
---

<BaseLayout>
  <section class="max-w-4xl mx-auto p-6 bg-white mt-10 rounded-lg shadow-md">
    <h2 class="text-2xl font-bold mb-6">Editar Producto</h2>
    <form id="editProductForm" class="space-y-6">
      <!-- Mostrar el nombre del producto -->
      <div>
        <label class="block text-sm font-medium text-gray-700">Producto</label>
        <p class="mt-1 text-gray-900">{product.name}</p>
      </div>

      <!-- Campo para el Precio -->
      <div>
        <label for="price" class="block text-sm font-medium text-gray-700">Precio</label>
        <input
          type="number"
          id="price"
          name="price"
          min="0"
          step="0.01"
          value={product.price}
          class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-3"
          required
        />
      </div>

      <!-- Campo para el Stock -->
      <div>
        <label for="stock" class="block text-sm font-medium text-gray-700">Stock</label>
        <input
          type="number"
          id="stock"
          name="stock"
          min="0"
          step="1"
          value={product.stock}
          class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-3"
          required
        />
      </div>

      <!-- Campo para el Estado del Vinilo -->
      <div>
        <label class="block text-sm font-medium text-gray-700">Estado del Vinilo</label>
        <div class="mt-1">
          <label class="inline-flex items-center">
            <input
              type="radio"
              name="estadoVinilo"
              value="nuevo"
              class="form-radio"
              checked={product.estadoVinilo === 'nuevo'}
            />
            <span class="ml-2">Nuevo</span>
          </label>
          <label class="inline-flex items-center ml-6">
            <input
              type="radio"
              name="estadoVinilo"
              value="usado"
              class="form-radio"
              checked={product.estadoVinilo === 'usado'}
            />
            <span class="ml-2">Usado</span>
          </label>
        </div>
      </div>

      <!-- Campo para el Estado de la Carátula -->
      <div>
        <label class="block text-sm font-medium text-gray-700">Estado de la Carátula</label>
        <div class="mt-1">
          <label class="inline-flex items-center">
            <input
              type="radio"
              name="estadoCaratula"
              value="nuevo"
              class="form-radio"
              checked={product.estadoCaratula === 'nuevo'}
            />
            <span class="ml-2">Nuevo</span>
          </label>
          <label class="inline-flex items-center ml-6">
            <input
              type="radio"
              name="estadoCaratula"
              value="usado"
              class="form-radio"
              checked={product.estadoCaratula === 'usado'}
            />
            <span class="ml-2">Usado</span>
          </label>
        </div>
      </div>

      <!-- Botón de Enviar -->
      <div>
        <button
          type="submit"
          class="w-full bg-blue-600 text-white px-4 py-3 rounded-md font-semibold hover:bg-blue-700 transition duration-200"
        >
          Guardar Cambios
        </button>
      </div>
    </form>
  </section>

  <script is:inline define:vars={{ product }}>
    document.getElementById('editProductForm').addEventListener('submit', async (event) => {
      event.preventDefault();

      const priceInput = document.getElementById('price');
      const stockInput = document.getElementById('stock');

      const estadoViniloInput = document.querySelector('input[name="estadoVinilo"]:checked');
      const estadoCaratulaInput = document.querySelector('input[name="estadoCaratula"]:checked');

      const price = parseFloat(priceInput.value);
      const stock = parseInt(stockInput.value, 10);
      const estadoVinilo = estadoViniloInput ? estadoViniloInput.value : null;
      const estadoCaratula = estadoCaratulaInput ? estadoCaratulaInput.value : null;

      if (isNaN(price) || isNaN(stock) || !estadoVinilo || !estadoCaratula) {
        alert('Por favor completa todos los campos correctamente.');
        return;
      }

      try {
        const response = await fetch('/api/seller/edit-product', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId: product.id,
            price,
            stock,
            estadoVinilo,
            estadoCaratula,
          }),
        });

        const result = await response.json();

        if (response.ok) {
          alert('Producto actualizado correctamente');
          // Redirigir al panel de vendedor
          window.location.href = '/seller/dashboard';
        } else {
          alert('Error: ' + result.message);
        }
      } catch (error) {
        console.error('Error al actualizar el producto:', error);
        alert('Error al actualizar el producto');
      }
    });
  </script>
</BaseLayout>
